import operator
from typing import Annotated, List, Tuple, TypedDict
from graph.converter_tool import TransactionParams


class PlanSimulateState(TypedDict):
    # User's address
    from_address: str
    # User's original intent
    input: str
    # List of steps (descriptions) generated by planner to be simulated.
    steps: List[str]
    # The current step (description, transaction_params)
    current_step: Tuple[str, TransactionParams]
    # The error from the simulation result
    tx_error: str
    # List of transactions that have been successfully simulated; each tuple contains (description, transaction_params, asset_changes)
    simulated_txs: Annotated[List[Tuple[str, TransactionParams, List]], operator.add]
    # The final response.
    response: str
